// Code generated by go-bindata.
// sources:
// ../../dist/tcptracer-ebpf.o
// DO NOT EDIT!

package tracer

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _tcptracerEbpfO = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5c\x6f\x6c\x5b\xd7\x75\x7f\xa4\x44\xeb\x4f\xa2\x59\xb1\xcb\x44\xe6\x92\x4d\x5e\xd3\xd5\xe3\x9a\x94\x92\x65\x9b\x51\x93\x96\x4d\xe0\x56\x51\xdc\x89\xcb\xa4\x56\x30\x96\x51\xec\xb3\x6c\xcb\x54\x6c\x5a\xa4\x2d\x3d\x31\x58\xbc\xa6\x69\x0d\xb5\xdb\xe4\xb5\xdb\x3c\xc3\xc3\x44\x49\x89\xd5\xa1\x68\x0d\x6c\x98\x85\xad\x2b\x85\x20\x18\x34\x60\x1b\x84\x21\xed\x84\xc1\x1d\xf4\x21\x0b\xb4\xa1\xdd\xb4\x36\xf5\xb4\x36\x9d\xc6\x77\xcf\xef\xf2\xbd\x77\xde\x7d\x8f\x54\x9c\x76\x1f\x6a\x02\xca\xc9\x3d\xef\x9e\x3f\xf7\xdc\x73\xcf\xfd\xdd\xfb\x5e\xf2\xfc\xe1\x23\x1f\x09\x06\x02\x9a\xfc\x05\xf0\xc7\x7f\xd9\xa4\xf5\xef\x09\xfc\x73\x6f\xb9\x67\xe9\x5e\xe2\xbd\x58\xfe\xfb\x99\xf2\x5f\xa1\x79\x63\xcb\x6c\x1b\xe9\xac\xe0\x17\x22\x9b\xa2\x5d\x9a\xa5\x7e\x0d\x41\x4d\xdb\xd8\xda\xda\x2a\xcd\xa1\x5d\xa7\x69\x9b\xe5\x76\x1b\x33\x7a\xa3\xde\xd2\x1b\x34\xdb\xe0\xff\x3e\xa8\x71\x5f\x92\xd9\xed\x11\x76\x6e\x40\x4f\x21\x92\x70\xd9\xed\x51\xd8\x79\x11\xe3\x0d\x6b\xbb\xc5\x13\x63\x07\xf1\x6b\x91\x2b\xbb\xae\x9d\x68\xd0\xb4\xf6\x32\x1d\x07\x1d\x68\x68\x0e\x70\xf9\x84\x8f\xdd\x52\x03\xb5\xc3\x0d\x75\x64\xff\x2c\xda\x01\x9a\x14\xa3\x88\x71\x05\x31\xae\x68\x8c\xe2\x9b\x43\xbf\xba\x7e\xe1\xc7\x40\xdd\x0f\x85\x3e\x63\xac\x51\xf0\x9f\xd9\xf5\x3f\x14\xc7\x26\xc8\x5d\x59\xdf\x22\xba\x06\xba\x0a\xba\x02\xba\x0c\xba\x04\xba\x08\x7a\x1d\x74\x01\x74\x06\xf4\x32\xe8\x34\xe8\x45\xd0\x0b\xa0\x13\xa0\x59\xd0\x93\x95\x71\x04\xc5\x38\xa8\x5d\x88\xd0\x73\xe3\x6c\x2b\xf9\x19\x21\x39\x63\xac\x0d\xe3\xdd\x47\xfd\xa2\x17\xc0\x6f\x07\xbf\x1d\x7c\xb2\x6b\x64\xf7\x11\xbf\x99\xfc\x31\xce\xc5\xa8\x7d\x94\xfc\x34\xf2\x71\xd1\x36\x26\x12\xc4\x9f\xc2\x78\x7a\x69\x3c\xc6\x44\x0f\x3d\x1f\x4b\x42\x3f\xc6\x3f\x75\xdd\x11\x97\xf4\x58\x5e\x3c\xd7\xa3\x37\xe1\xcf\x04\xda\x14\xd7\xd2\x2f\x51\xbc\xc7\x9b\x28\x1f\x32\x57\x5e\x17\xfc\xf1\xf2\xa0\x4d\x8f\x32\xd1\x37\xa0\x27\x0b\x39\x9a\x87\x91\xb1\x0b\xa2\x9d\x89\xae\xe3\xf9\x31\xd1\x3e\x11\x24\x3d\x69\x63\x48\xb4\xfb\x7e\x8f\xf4\xa7\x8d\x93\x44\x73\xa3\xd4\xaf\x8e\xfa\xf5\x7d\x81\x9e\x17\xba\x31\xaf\x51\x9a\xd7\xe1\x80\x2e\xe2\x1e\x0e\xfc\xa6\x78\x1e\x0e\x7c\x91\xf2\xbe\x9c\x66\x26\x3f\xa4\xfd\x99\xe0\xcb\xf5\x93\x89\x3c\x2d\xe4\x76\x7e\x86\xda\xa5\x22\xd1\x86\xf2\xf3\xa7\xcb\xf9\x2c\xe7\xb1\xa4\x13\xdf\xcc\x67\x73\xc9\x8e\x14\x49\x2e\x13\xa1\x71\x84\xb4\x19\x8c\x33\x0e\x7f\x28\x7f\xf5\xe8\x20\xe8\x5b\xd4\x3f\xda\x0f\x7a\x0b\xfd\x4e\xe2\xf9\x26\xf2\x83\xf2\x41\xda\xdb\xb9\xdb\xed\xd7\x20\xfc\xaa\xb7\xf9\x63\x9c\x6d\xaf\x2a\xf7\x96\x52\x6e\x5f\x55\xb9\x7e\x5b\x1c\x2c\xb9\x58\x55\xb9\x5b\x4a\x39\xca\xcf\x9d\xf7\xba\xfb\x9f\x44\xff\x46\x45\xbc\x8d\xb3\x09\xd1\x36\xe6\x28\x5e\x2a\x7b\x9b\x8a\xf1\xa5\xe7\x11\xff\x5e\x9a\x8f\xf4\x1c\xcd\x83\xde\xdd\x45\xf9\x38\x2b\xe7\x83\xe6\x6d\xa4\x78\x0b\xf3\xda\x4d\xfd\x5f\xa2\x79\xd1\x8f\x3e\x2a\x68\xb8\x3e\x23\xec\xc9\x3c\x1c\x07\x0d\xd7\x51\x9e\x7e\xa2\x6c\x7f\xab\xdc\x33\x1c\x3c\x4e\xed\x00\xda\x01\xca\x73\x59\xe7\x0a\x91\x93\xac\x8e\x4f\x38\xea\x84\x7d\x5c\x59\x8c\xab\x15\xe3\x32\xa9\xbd\xee\xc6\xd8\x3e\x73\x52\x51\x87\x43\xda\xd3\x82\x86\x03\xef\x15\x75\x34\x1c\x78\x4c\xc4\xc7\x5c\x17\x21\xf1\x9c\xea\x81\xf4\x47\x8f\xf4\xc3\x1f\x8a\xdf\xce\x8f\xb8\xe3\x3d\x58\xd3\x7c\x0d\x7a\xce\x57\xbf\x62\xbe\x4e\x68\x88\x2b\xa8\x39\x8e\xef\x6e\x6d\x6d\xc9\x71\x3c\xd3\xda\x51\xf1\x33\x20\xfc\x5b\xc2\xfa\x8b\x31\xff\x69\x9e\x8d\x22\xd5\x55\x55\xbe\xd9\xd7\x03\xf7\x3f\x5d\x44\x9e\x44\x6e\x42\xff\x83\x0e\xfd\x99\x08\xe5\xc9\xce\x1d\x6e\xbd\xb7\x7c\xeb\x86\xcc\xaf\xd7\xa1\x77\x0f\xf3\x1b\x75\xa0\xd8\xee\xe9\xf7\xa6\xaf\xdf\xc8\xd7\xc8\x1a\xf4\xb7\x30\xbf\x8f\x93\xde\x8f\xbb\xf5\x1e\xf7\xf5\xfb\x38\xfc\x7e\x03\x7a\x69\xa3\x4e\x17\xfb\x61\x6f\xd5\x85\x43\x6a\xc9\xcb\x6a\xf8\xe7\xff\x0d\x77\xb5\x71\xdc\x95\x64\xeb\xb5\xc7\x65\x37\xe9\x87\x7f\x90\x27\xe1\x1d\x8d\x2e\xdc\xe4\x25\x67\xae\x53\xe3\x38\xe2\x50\x23\xbe\xb3\x70\xd6\x0f\x69\x1c\x15\x9c\x45\x38\xc9\x98\xe5\xe3\x68\xdf\x72\xf6\x1b\x24\x9c\x15\xf8\x1e\xe1\xac\xb3\xc0\x59\x7b\xff\x4b\x73\xca\x01\x57\x45\xb0\xff\x46\x80\xab\xb0\x1e\x0b\x11\xe0\x8a\x08\x70\x45\x04\x38\x24\x02\x5c\x15\x01\xae\x8a\x00\x57\x45\x80\xab\x22\xc0\x55\xac\x1e\xca\x7a\x59\x88\x0c\x39\xea\xd2\x8d\x3a\xe0\xac\xee\x41\xec\xa7\x43\xc0\x2b\x84\xb3\x8c\x1c\xf0\x55\x77\xd6\xb1\xdf\x1a\xb9\x76\x7a\x9e\x07\x9e\xea\x85\xdd\x6e\xe0\xb2\x5c\x0c\xcf\xe3\x78\x0e\x3f\xbb\x81\xc3\x72\x09\x3c\xef\xc1\x73\x8c\xab\x1b\x38\x2c\x07\x7c\xd5\xbd\xe0\x88\x43\x3a\x0f\x5c\xd5\xfb\x77\xc0\x6b\xc0\x55\xbd\x14\xc7\xd2\x61\x8a\xef\x78\x08\xb8\xea\xe8\x6b\x84\xab\xea\x81\xab\x7a\xbf\x09\x3d\xc0\x55\xbd\x14\xf7\x91\xfc\x05\xd1\xce\xf4\xae\xe2\x39\xf0\x52\x3d\x70\xd5\x39\xda\x9f\xfa\xfa\x35\xf8\x0b\x9c\x97\x1f\x12\xed\xf4\x39\xe0\x30\xd8\xed\x83\x1f\x85\xa3\x72\x1e\x81\x6b\x22\xb4\x8f\x0e\x04\xbf\xaa\x99\x29\x5d\xba\x46\xfd\x1a\xca\x79\xb7\x58\xce\xcb\x9d\x07\xa9\x6d\xaf\x2b\x31\xdb\xfe\xe5\xda\x27\x8a\xd0\x7b\x1f\xe5\x99\x51\x8c\xa1\x0d\x3d\xb6\xbc\x6f\x67\xeb\x7a\x50\xb9\xcf\x5d\xa1\x71\x34\x62\x1f\x01\x1d\x68\xfc\x23\xc1\xf7\xda\x6f\xbd\xf2\x4b\x8e\x57\xae\x93\x42\x64\x03\x74\x1d\xf5\xf0\x07\xa0\x9b\xe0\xaf\xa1\x1e\x62\xff\x39\x4b\x79\xc0\x71\x92\xe9\x7f\xab\x47\x9c\x1a\xed\xf1\xf1\x91\x6f\x63\xf2\xed\xdb\x90\xb7\xcb\x6d\x6c\xd3\x6e\x23\x93\x5f\x57\xca\x57\xc7\x95\x3f\x78\x9b\xb8\x72\x73\x9b\xb8\x72\xad\x26\x9c\xb2\xe6\x89\x53\x94\xb8\xf9\x4b\xc8\x8b\x2b\x94\x27\xc6\xcb\xc8\x8f\x53\x94\x3f\xa5\x34\xc9\xf7\x5d\x22\x6a\x5c\x43\xde\x4c\xa2\xfe\x2c\xe0\x9c\x3a\x45\xf9\x37\x32\x8f\x3c\xea\x9d\x00\x2e\xdd\x04\x2e\x9d\x64\xb8\xf5\x39\xc2\xa1\x81\x0f\x09\xbd\x85\xee\x36\xb2\xf7\x5b\xb0\x57\xa9\xe3\x1f\xa0\x71\x7c\x98\xda\x16\x0e\xa5\x38\x95\xf6\x72\xfe\x01\xd2\xd7\xdb\x88\x3a\xd9\xca\xf6\x89\x84\xb2\x0e\x18\xc5\xa4\xa3\x6d\x8f\x5b\x5c\x81\x5b\x07\x9a\x68\x23\x94\xf1\x39\x11\xc0\x3a\x05\x6d\x13\xb0\xc2\xc2\x7b\x0f\xec\xa5\x0d\x6d\xa0\x81\x70\x92\x1c\x67\x35\xb9\x67\xf6\xd2\x44\x8e\xef\xa0\xe7\xfa\x29\x9a\x1f\x59\x0f\xf4\xa9\x07\xe1\x3f\x8d\xf7\x66\x80\xfc\xcb\x44\xf6\x81\xdf\xca\xf8\x51\xf0\xdb\xb0\xbe\xdf\xe7\xda\xff\x79\x7d\x8a\x29\xeb\x13\xc6\x6f\x93\x1b\xac\x41\x6e\x3b\x38\xc9\xcc\xf3\x42\x73\x9c\xcd\x1f\xed\x0b\xc6\x09\xda\x07\x8c\x93\x59\x97\x1f\xab\x7e\xb8\x02\xf7\x2b\xe1\xa6\x2f\x91\x3c\xf2\x7a\x20\x70\x4d\xe0\x85\x12\xf2\x8e\xcf\x8b\x79\xbe\x68\x10\xfd\x66\x85\x1e\x9e\x4f\x19\xec\x8b\xb5\xde\x23\x85\x81\x3b\x0d\x3c\x0f\x07\x9a\x85\xfd\xdb\xd7\xfb\x3b\xa2\x1d\xd2\x3e\x07\xfd\xb4\xaf\x97\x5e\xa0\x7e\xaa\xba\x70\x5d\x51\x87\x46\x8a\x64\x77\x20\xf0\x9d\xad\xa0\x66\xc7\xf5\x4e\xdc\xa3\xc3\x3f\x1d\xfb\x49\x06\xfb\x46\x06\xfb\x86\x1c\x87\x8e\x7d\xc6\xb8\xd4\x56\xb3\x3f\x8e\x3a\x75\xa9\xbd\xaa\xdc\x86\x52\x6e\x5f\x55\xb9\x35\x55\x1d\xbe\x14\xab\x2a\xf7\x96\x52\x0e\xf5\xbb\xcd\xdd\x3f\x61\xaf\xdf\xd0\x6b\xc9\x25\x44\xdb\x98\x4b\x78\xd6\xef\x75\xe5\xbd\x00\xe2\xdf\x7b\x19\xf5\x75\x03\xf5\xf5\x2a\xea\x2f\xe6\x23\x4a\xf3\x36\x82\xf3\x60\x26\x32\x4b\xfd\x5f\xa2\x79\xd1\x8f\xce\x53\x3d\xae\xa7\x03\xb2\xfb\x5e\xe0\x09\xc1\xb7\xee\x05\xa8\x20\x5b\x75\x97\xea\xb8\xfb\x7e\x95\xd6\x4d\x48\xdb\x4f\xe3\xb1\xe5\xf1\x65\xdf\x3c\xa6\x3a\x7e\x03\xe7\x80\xc2\x24\xf0\xf8\x24\x70\xdc\xe4\x75\x57\x9d\x96\x79\x23\xf0\x44\x9d\x33\xbe\x2f\x0a\x1f\xcc\x7a\x42\xf1\x35\xe6\xa8\xae\xf0\x71\x16\xba\xad\x7b\x69\xd3\x0f\x3d\x42\xfb\x42\xba\xf8\xe7\xc8\xe3\x7e\xb4\x65\xfe\x9f\x44\xfb\x2a\xda\xa3\x68\x53\xbc\x4b\xbb\xc8\x8f\x9b\xd8\x3f\x32\x51\xda\x27\xc7\x51\x8f\xad\xba\x3c\x06\xb9\x79\xe8\xc9\x13\x9d\x9c\x00\x7d\x0e\x75\x7b\xc9\x81\xef\x8c\xe2\xa2\x03\xe7\x95\xe6\x11\x8f\x7a\xca\x37\xb9\x3f\xb5\x05\x9d\x71\xbe\x11\xa2\xf7\x02\x66\x5c\xf6\xd4\x38\x2f\x75\x9a\x75\x5e\xb6\xea\x56\x90\xea\x16\xfa\x55\xce\x9d\xb7\x5d\x77\xbe\xbf\xd5\xac\xd9\xeb\x61\xad\xe7\xb3\x84\xa3\x3e\x6d\x1b\xe7\x5e\x4a\x2a\xfd\x56\xe1\xdc\x84\x0a\x2f\xfa\xc8\x73\x9c\x7b\x79\x1b\xf2\x55\x71\xae\x8f\xdd\x9a\x70\x6e\x0d\x75\x52\x89\x73\x6b\xa8\x93\x4a\x9c\xeb\x53\x27\xd7\x6a\xaa\x93\xdb\xc4\xb9\xc5\x84\x23\x4f\x8c\x97\x90\x1f\x38\x17\xf6\x85\x35\xe8\x45\xbe\x74\x53\x7e\x19\xf3\xc0\xb7\xf2\x7c\x3a\x8b\xfc\x89\xae\xa0\x9e\x02\xdf\x46\xfe\x91\xd6\xef\x0c\xf0\x6d\x33\x9d\x77\xc3\x21\xaa\x0b\x7d\x5d\xa4\x3f\x5c\x7f\x45\xb4\xad\x3a\x4a\x7e\x58\x75\xf4\x0f\xa8\x2e\xb9\xea\xe8\x0e\x51\x47\xed\xeb\xf4\xba\xef\x3a\xfd\x6d\x17\x6e\xf0\xea\x4f\xf5\xf6\xb3\x54\xf7\x2a\xf5\x16\xe7\xfd\x49\xec\xf7\x93\x97\x5d\xf5\xf6\xf2\x8f\xb5\xde\x5e\x75\xd4\x5b\x03\x75\xc1\x98\xc5\x7a\x8f\x3a\xcf\xbb\xb2\x2e\x1a\xb3\xa8\x0f\x51\xe7\xfd\x8b\x51\x5c\xf1\xa8\xc7\x74\x0f\xc2\x71\x77\xe9\x5d\x44\x53\x74\x5d\x2a\xee\x2d\x44\xbd\x06\xcd\xf4\x4e\x55\xea\x78\xbb\xf0\xf3\xf3\xa8\xd3\xd3\xa0\x5f\x84\xdd\x05\x56\xaf\x67\xde\x76\xbd\x1e\xd4\xac\x7a\x1d\xd2\xbe\x4e\xf2\xc0\xcb\x1c\x1f\x5b\xf7\x7d\xb1\x4a\x5b\xac\x27\xba\x9e\xd0\x8c\x91\x6d\xe2\xe6\xca\x7d\xdc\x84\xe8\x21\xef\xd9\x06\x02\xe7\x03\xe6\xd4\x17\x4e\xd1\x79\xa3\x84\xf7\x4f\x37\x60\xa7\x30\x45\xf3\xa1\x4f\xd1\x7a\x90\xe7\xdb\x12\xde\x7b\xa9\xd6\xef\xb2\xf2\x1c\x9e\x20\xbf\xe7\x96\x3d\xd7\xfd\x6b\x8a\x75\x5f\x98\xa2\xbc\xcb\x4c\xcd\xb8\xd6\x43\x7c\x5b\xf8\xbc\x85\xe1\x73\xe8\x8d\x6c\x57\x2f\x2d\x94\x10\xf8\x96\xfe\xa7\xb1\x6e\x8f\x50\x7c\xe5\xfe\xe9\x13\xa7\x19\xe5\xfe\x39\x83\xfd\xf3\xdf\x19\x6e\x77\xde\x5b\xea\xb8\xaf\xf4\xc6\xed\x71\x27\x6e\x97\xef\xf3\x7c\xfc\x99\xf6\x7b\x9f\xe7\x23\xa7\xc4\xed\xf2\xde\xc5\x47\x4e\x89\xdb\xe5\xbd\x8b\x8f\x9c\x12\xb7\xcb\x7b\x97\x3d\xee\xfe\x71\xfb\x7e\x04\xbd\xee\xbc\x8c\x6f\x13\xb7\x23\xfe\xb8\x6f\xb5\x70\xfb\x3c\xc3\xed\x0b\x0c\xb7\xff\x29\xc3\xed\x5f\x06\x6e\xa7\x05\xea\xc6\xed\x74\xe0\xb6\xf6\x1b\xca\x6b\xb9\xdf\x0c\x04\xbe\x49\xfe\xda\xf2\xd7\xcc\xab\x90\xf6\xb7\x34\xae\xdb\xce\xc3\xef\x6a\x4e\x1c\x57\xeb\xbd\xba\xbc\x9f\x99\x7e\x7b\x38\x4e\xde\xfb\x31\xbf\x55\x38\x2e\xee\x77\x6f\xa8\x90\xe7\x38\x6e\x7a\x1b\xf2\x35\xdf\x57\x2a\xec\x6e\xeb\xbe\xd2\xc7\xae\xef\x7d\xa5\x8f\x9c\xef\x7d\xa5\x62\xdd\xac\xd5\xb4\x6e\xb6\x89\xe3\xe6\x91\x17\xf2\x3b\x90\x39\xf9\x3e\x63\x01\xfb\x3f\xf2\x24\x0a\xbc\x50\x5c\x77\xe4\xdb\xc8\x0c\xf2\xa6\x99\xf2\x70\x04\xef\xc5\x33\x47\x5f\xa1\x75\x75\x0d\xf8\x6d\xf2\x55\xaa\xeb\x87\xc8\x9f\xbe\x8f\x12\x0d\x37\x9c\x22\x3f\x71\xaf\xdf\xf7\x5e\xc9\x3f\x21\xe8\x27\x34\xac\x33\x6d\x98\xda\x21\xb4\x43\x74\x61\x2b\xeb\xfe\x40\x3d\xfd\x1b\x5f\xaf\x6d\x62\xb9\xda\xee\x0d\x9f\xa0\x7b\xb6\x81\x20\xdd\xe7\x54\xbf\x2f\xfc\x4c\x25\xce\x84\xbf\x80\xbb\x70\x7f\x28\xef\x11\x0b\xa7\x12\x15\xdc\x65\xee\x3b\x3a\xde\x03\xca\xf7\x16\x16\xae\x39\x52\xe9\x47\x71\x94\xef\x13\x80\xd3\x66\xa9\xfe\xe8\x78\x5f\x95\x9e\xfd\x1a\xda\xc7\x30\x1f\x14\xe7\xd2\xbb\x49\xfe\x26\xd6\x5f\xa6\x9b\x70\x5b\x5b\x83\xd3\x7f\xd9\x2f\x85\xef\xa5\xc6\xd1\xdf\x92\x3b\x45\xfe\x05\xe1\x5f\x74\x14\xeb\x3e\x0b\x9a\x77\xe1\xd4\xa4\xe2\xfe\xd6\x28\xe2\xdc\x3e\x0b\xfc\x38\x87\xfb\x6e\xe0\xf4\x71\xbc\x6f\x2a\xd1\xb2\x70\xbd\xcf\x2f\xe1\xbc\x10\xd6\xb0\x2f\xca\x76\x3d\x01\xb2\x12\xbd\xb6\xab\xe4\x83\xd5\x7f\x97\xe3\x79\x2a\xab\x39\xe5\x05\x6a\x73\xe2\x42\xb3\x3e\xc9\xf7\xff\x1c\x17\xca\xf7\x00\xfc\x3c\x2f\xc7\xe7\x39\xae\x5d\x4e\xbb\x7a\xb7\xdc\x8f\x08\xb7\xde\x0c\x21\xde\xf8\x1e\x2b\x35\x06\x79\xc4\xd1\xc2\xcf\x57\x58\xbe\x5c\x75\xe1\xa1\x69\xdf\x73\xca\xc3\x1a\xef\x3f\xe3\xdb\x7f\x5f\xa5\xfd\x93\xc9\xef\x19\x96\xdf\xf3\x8e\xfc\x4e\xcf\x2e\xf8\xe6\xb7\x3b\x5e\xa7\xd8\xba\x79\x7b\xf9\x7b\xbb\xf9\xc1\xef\x6b\x7e\x52\xf1\x34\x66\x65\xdd\xc6\x7e\x8f\x38\x55\xde\x77\xcf\xa2\x6e\xcf\x01\x1f\xe0\x3d\xb6\x3c\xef\x79\xd7\x13\x3a\xef\xb5\x09\x78\x6d\xab\x27\x38\xbf\xa5\x6c\xf9\xef\x3c\xc7\x7d\x8a\xd5\x93\x4f\x63\x1e\x2e\x82\x7e\xfe\xc7\x36\x1f\x83\x22\xe6\x7f\x8f\xf8\xf0\xef\x46\xf1\xfd\xcc\x1e\xe7\xf7\x1b\xf2\xfb\x0b\x7e\x9e\x0b\x37\x75\x8b\x88\xdb\xd7\x91\xea\x7b\x11\xf7\x79\x6e\x3f\x3b\xcf\x75\xd0\x79\x6e\x0a\xf3\x0d\xfd\x99\x29\x7c\xef\x33\xf5\x26\xf0\x55\x75\xbc\xf0\xe6\x36\x70\x46\x03\xbe\x7f\xa8\xf6\xdd\x5d\x61\x0a\xb8\x77\x0a\xdf\xcf\xd4\x70\x9e\x54\xe3\xa4\x84\x78\x6e\xcc\xad\x7b\xe2\x0f\xd5\xb9\xa4\x30\x35\x8d\x38\x24\x6b\xae\x73\xb5\x9d\x27\xa1\x37\xb2\x5d\xbd\x5e\xe7\xc9\x5f\x45\xbd\xfc\x6f\xf0\xab\xe3\x78\x91\xd7\x8d\x78\x2f\xe7\xc2\xf3\x49\xe0\xf9\x7f\xdb\x92\x7c\xaa\x17\xf8\x7e\x17\xf7\x6b\x1c\x9f\xf0\xfb\x58\x1d\xe7\x70\xeb\x5c\xba\x84\x75\x06\xdc\x00\x9c\xa6\x47\xe4\x7d\xbb\x7c\xbf\x84\x7a\x89\x73\x82\x1e\x99\x47\x1d\xc5\xb9\x29\xfa\x2a\xf8\xb8\x6f\x88\xd0\x77\x29\xd6\x7b\xd3\x79\xe4\x4b\xf5\x73\xec\xa2\xcf\x39\x56\x85\x73\xbf\x66\xff\x8e\x8d\xe1\x5c\xeb\x3b\x39\xe0\xcd\x22\xad\x1f\xeb\xde\xff\x15\x57\x7d\x59\x50\xe2\x15\x8a\x8b\xdc\xb7\xe5\x77\xc6\xb2\x6e\x85\x83\x7f\x29\xf8\xf6\x7a\x63\x86\xf8\xa1\x5d\x54\xe9\xd3\xb8\x1f\x93\xf2\xd6\x79\x90\xbe\x23\xe6\xf3\x46\x75\x28\x50\x96\xff\x2a\x8d\xd7\x56\xdf\xa6\x45\x7d\xeb\x51\xd6\x37\xf9\xfe\x4a\xee\x37\x21\xed\x65\xe2\xbf\x63\xf9\xf7\xc7\xe2\x3c\xf9\xce\xe5\xdf\x2a\xf2\xe5\x35\xd0\x15\x47\xfe\x58\xf9\x24\xf3\xeb\x9d\xca\xd7\x9b\xe0\xcb\x73\xeb\xeb\x1e\xf9\x5a\xfd\x1c\xa9\xbe\x2f\xab\xfd\x1c\xb9\xb2\x4d\x79\x7e\x7e\x5e\xf4\x91\x97\xeb\xa5\xa1\xc9\x7d\x6e\x5e\xf2\x39\x1f\x5a\xeb\x66\xd5\x63\xdd\xfc\x73\x8d\xeb\x46\xde\x0b\xd3\x3c\x0d\x04\xf1\xdd\x02\xc6\x53\xfd\xfc\x45\x1f\x0c\x18\x73\x94\x17\xc6\x3c\xe5\xc3\x40\x3d\xf6\x9d\x03\xd0\x83\xef\xcd\xe4\xf7\x6e\x54\x65\x6c\xe7\xb2\x50\x67\x65\x7c\x94\xb7\xc0\x43\xd7\x90\x9f\x93\x83\x95\xbc\x34\xf3\x5e\xc7\x7d\xb1\x7e\xea\x18\xc3\x53\xce\x7b\xef\xf4\x2c\xf2\x32\x3a\x81\x36\xf2\x38\xfa\x1c\xda\x14\xbf\x0c\xee\xc3\xc7\x2b\x38\xf4\x53\x2c\x1f\xab\xe3\x9e\x93\xca\xf8\x4e\x54\xa9\x4b\x74\x40\x76\xd7\x25\x02\x66\xe9\xe2\x05\x8f\xba\xd4\x4e\xfa\x3c\xeb\xd2\xfd\x14\x7f\x5b\x5d\x4a\xfa\xd4\xa5\x12\xce\x93\x56\x5d\xa2\x04\xe8\xdb\x4b\xfc\x70\x80\x1c\xe8\x7b\x02\xed\xba\x56\xf8\xb7\xea\xe1\xdf\xdd\x55\xfc\x6b\x74\xf9\x57\x6b\xdd\xb4\xdf\xf3\x57\xff\x8e\x98\x70\xa2\x3c\x97\xea\xcd\xc0\x67\x95\xef\x8a\xd7\x5d\x78\xe2\x4d\x5f\x3c\xd1\x4c\xe3\xae\xe0\x08\x8c\x83\xe1\x4a\xfb\x77\x3e\xeb\xef\xc8\xf7\xd0\xee\xef\x9f\x6b\xc3\xaf\x51\xa5\x7f\x5e\xe7\x47\x8e\x9b\xad\xf5\x48\xf5\x81\x7f\x6f\x59\x98\x5a\xaa\xac\x3f\x73\x48\x72\x3f\xb0\xf6\x0f\xac\x9f\xc8\xb7\x41\xd7\x1d\xf5\xdc\xaa\xef\xb2\xde\x57\xdb\x6f\x68\xfe\xac\xef\xf6\x89\x9f\x3e\xeb\xb4\xa7\xaa\xdf\x5e\xe7\x91\x45\x9f\xf7\x4a\xf2\xfd\x6a\xb5\xf3\x61\xbd\xed\x4f\xab\xd7\xee\xfc\xf0\xbb\x13\x17\xf5\xcf\x5c\x1e\x8d\xf8\xbb\x13\x17\xeb\x77\x27\x2e\xea\x9f\x19\x17\xb3\x6e\x09\xdc\x74\x27\x2e\x95\x9f\x19\x17\xf3\xc6\xf3\x4e\x5c\x9c\x3f\xb9\x8e\xee\xd4\x5d\xe7\xcf\x8c\xcb\x9d\xfd\xc8\xfd\x93\xf9\x72\x51\x53\xff\xff\x12\x7e\x5a\x7f\x1f\x4d\x1e\xd1\xfe\xd7\xf6\xdf\xa5\xf2\xdf\x03\x22\x87\x42\x5a\x72\x87\x93\xff\x87\x75\xc4\x8f\x35\x38\xf9\xef\x03\x7f\x9d\xf1\xff\x23\x48\xfc\xc1\x3a\x27\xff\x73\xe0\x4f\xb3\xfe\xc7\xc0\xef\x69\x74\xf2\x1f\x03\x3f\xcb\xfc\x69\x81\x9f\x33\xac\xff\xb7\xe0\xcf\x75\xc6\xff\x0b\xc9\x67\xfe\x1c\x81\xfe\x35\xd6\xff\x01\xf0\x37\x18\xff\x41\x21\xdf\xe4\xf2\xff\x85\x20\xf1\x97\x19\xff\xd7\xc1\x1f\x62\x7a\x0e\x80\x3f\xcd\xc7\x5b\x4f\x7c\x3e\xae\xc3\xe8\xbf\xc4\xfc\xff\x5d\xd1\xbe\x4b\x5b\x63\xfc\x37\x82\xc4\x9f\x08\x39\xf9\x05\xf0\x17\x18\xbf\x1f\xfc\x45\xc6\x7f\x08\xfc\x65\xc6\x7f\x17\xec\xb6\x37\x39\xf9\xff\x82\xfe\x49\xc6\x9f\x40\xff\x05\x27\x5b\xfb\x27\xf4\xe7\x8b\x74\x54\xea\x61\xfc\xc3\x22\x3e\x2d\x5a\x0f\xab\x75\x61\xf0\x17\x9a\x9d\xfc\xef\xd4\x11\x7f\x93\xf1\xff\x06\xfc\x25\xa6\xff\xb3\xe0\xaf\x30\xfe\xfd\xe0\x0f\x31\xbb\x07\x60\x77\x99\xe9\x0f\x81\xbf\xc8\xf2\xe1\x2b\xd0\xc3\xd7\xcb\xdd\xe0\xb7\xb1\x79\x7f\x48\x8e\x97\xe9\xff\x11\xfa\xf7\xdc\xed\xe4\x7f\x03\xfc\x18\xe3\xbf\x0c\x7e\x9c\xf1\xcf\x82\x9f\x65\xe3\xfd\x51\x90\xf8\xab\x8c\xff\xaf\xa2\xff\x4e\xad\x87\x9d\x2b\xbf\x0e\xfe\x20\xe3\x3f\x0f\xfe\x1a\x8b\x5b\x2e\x48\xfc\x19\x16\x87\xf7\x80\xcf\xe3\x53\x0f\x3d\x13\x2c\xaf\xde\x53\x4f\xfc\x56\x16\x9f\xef\xa3\x7f\x1b\xe3\xdf\x82\xfe\x4d\x36\xae\x15\xf0\x87\x98\xff\x7f\x22\xf4\xdc\xa3\x2d\x3a\xd9\xda\x3f\x08\xfe\x6e\x6d\x86\xe9\xa9\x17\xe7\xf2\x9f\xd3\xf8\xef\x63\xe2\x1e\xf3\xe7\xdd\x7c\x71\xbf\x7a\x9f\x8b\xff\x65\xa1\xa7\xcd\xc5\xff\xa0\xd0\x73\xbf\x8b\x7f\x58\x33\xf9\x3f\xeb\xe2\x8f\x8a\xfe\xf7\xb8\xf8\xdf\x12\xfc\x16\x17\xff\x2b\x82\x7f\x97\x8b\xff\x0d\xa1\xbf\xce\xc5\x7f\x56\xf0\x1b\x5c\xfc\x8f\x0b\x3d\xbb\x5d\xfc\x06\xd1\x7f\xa7\x8b\xff\x57\x82\x1f\x72\xf1\x7f\x4d\xf0\x9b\x5c\xfc\x47\x44\xdc\xc2\x2e\xfe\x65\x11\xb7\x7b\x5d\xfc\x7d\xc2\x9f\x07\x5c\x7c\x5d\xe8\xd9\xe3\xe2\xbf\x22\xf4\x44\x5c\xfc\x1e\x50\x73\xda\xcd\xff\x52\x31\xce\xda\x59\xd6\xbe\x6e\x6b\xf7\x9a\xfd\x77\x58\xed\xa7\xca\x7f\x2b\x8d\xce\xe7\x76\xfd\x8f\x32\xfd\x8f\x32\xfd\x66\x7b\x86\xe9\x5f\xa8\x63\xfa\x1a\x9d\xf6\x2e\xd8\xda\x47\x98\x3d\xb3\xff\x0a\x6b\xef\x0b\x38\xdb\x1b\x75\x4e\x7d\x83\x21\xab\x6d\xea\xba\x18\x72\x3e\x8f\x35\x39\xed\x0d\xb1\x76\xe3\x5d\x56\xfb\xc9\xf2\x5f\x92\xd9\x4f\x30\xfb\x97\xb9\x3f\x4d\x4e\xfb\xb2\xfe\x4b\xfb\xab\xcd\x4e\x7b\xad\x77\x3b\xfb\xcf\xb4\x38\xed\x0f\x32\xfb\xcb\xcc\x5e\x7b\xd0\xd9\x5e\xac\x77\xea\x4b\x32\x7f\xec\xfe\x3d\xa9\x39\xe3\xfd\x98\x39\x1e\x5b\xfb\x83\x9a\x86\xaf\x5d\xac\xf6\x10\x6b\x4f\x04\x9c\xfa\xb5\x87\xf3\xc3\x13\x79\x2d\x33\x36\x9c\xcf\x8e\x9d\xf9\xe4\x70\x2a\x35\x72\x7a\x38\x9f\xd2\x73\x99\x54\x5a\xd7\x87\xb3\x79\xed\xe1\xb1\xe1\xd1\xca\xe3\xf7\xf3\xa7\xcf\xa6\xb3\xb9\xf7\x1f\x3f\x36\x72\x3a\x97\x4f\x8f\x8e\xa6\xca\xfd\xec\xba\xf2\x7a\x36\x75\xfe\x60\x4a\x3f\x73\xfa\xf4\xb0\x5e\x7e\xa2\x66\x3b\x2d\xa8\x1e\x2a\x9f\x70\x3b\x5d\x6a\x3b\x5d\x7e\x76\xba\x3c\xed\x58\x4f\xc4\x10\xcb\xbc\xfc\x58\x5a\x1f\x1e\x4b\x95\x07\x9a\x3f\x97\xe3\x03\xcf\x8e\x1c\xcb\x69\xa9\xf3\xc3\x63\xb9\x91\x33\xa7\xed\xae\x1d\x3f\x96\x42\x9f\x8a\x5b\x36\x96\xd3\x25\xfe\xc0\xc5\xb5\x0f\x2c\x57\x9e\x08\xd3\x97\x61\xee\xba\xf5\xc0\xde\x5d\x1f\x3d\x93\x73\x75\x25\x66\x6a\x74\x44\x1f\x3e\x6d\x3e\xcd\xe5\xc7\xf2\xe9\x4f\x96\xa9\xf1\xac\x49\x8f\x3c\xfe\x78\x47\xaa\xf3\x11\x93\x1e\x4c\x75\x08\xda\x05\xba\x1f\xb4\xa3\xd2\x8e\xa3\x7b\x1c\xdd\xe2\xe8\x06\x7e\x07\xf8\x87\xa0\xed\x10\xba\x1d\x42\xb7\x43\xe8\x76\xa8\x12\xef\xd4\xf0\xf9\xe1\xd3\xf9\xd4\x48\xf6\xfc\x41\xe2\x61\x42\x72\x67\xf4\x8c\x8d\x9b\x3f\x97\x1d\x1d\x2e\x87\x9f\x58\x42\xf9\x41\xd2\x0d\xd2\x09\xda\x71\x10\x26\xd0\xeb\x80\x49\x0e\x10\x39\x98\xea\x44\x93\x68\x57\xa5\xdd\x71\x00\x0e\x1e\x80\xf4\x01\x85\x83\x5d\x4a\x07\xbb\xdc\x0e\x76\x91\xd2\x2e\xb2\xd1\x85\x58\x80\xdb\x01\x36\xd1\x0e\xd0\x43\xa9\xfd\xf4\x78\x3f\x68\xe7\x7e\x44\x7a\x3f\xc4\xc1\x27\x1a\x4f\x75\xa2\x7b\x27\xba\x75\xa2\x1b\xf8\x1d\x68\xef\xef\x40\x3f\xd0\xce\x0e\xf4\x47\xbb\x03\x6d\xa2\xe5\xfe\x31\xf4\x07\xed\x8c\x51\x60\x3a\xd1\xee\xc0\x97\x8f\xb7\xf7\x6b\x09\x6a\x0a\x94\x50\xae\x9b\x47\x88\x7e\x8c\xe1\x40\x7e\x36\x0f\xe0\x8f\x1d\xf7\xc4\xbb\x0a\xd5\x8f\x5f\x79\xb4\x04\xfc\xe5\x27\x18\x9f\xc1\x6d\xad\x29\xa0\x29\xd0\x86\xa6\x4d\x3f\x49\x14\x9f\x71\x8a\x77\x45\x75\x36\x79\xc9\xdf\xd0\xd4\xf6\x2b\xf8\xb1\xc9\xdf\xfe\xb7\xdd\x5d\xc4\x6f\x06\xf6\x93\x36\xfb\x21\x85\xfd\x97\xbc\xec\x43\x69\xb5\xf1\x17\x3d\xec\x6f\x28\xc6\xdf\xa0\xb0\x7f\xd1\xc3\x7e\x0c\xfb\x30\x3f\x97\x73\xfb\x9f\xf6\xb0\x2f\x36\x5b\xcd\xda\x0f\xdb\xd1\x8f\xdb\x5f\xf6\x98\xff\x35\xbc\xcf\x8d\xdd\xe5\x6f\xff\x55\x8f\xf9\x1f\x82\xfd\x69\x9b\xfd\xbb\x14\xf6\xbf\xe7\x61\xbf\x15\x47\x82\xe5\x16\x7f\xfb\xff\xe9\x61\x7f\x03\xf6\x2f\xd8\xec\xb7\x28\xec\xff\xa2\xa6\xb6\xbf\xfa\xcb\x44\xf7\x35\xfb\xdb\xff\x05\x4d\x6d\x3f\xfb\x14\xd1\x21\x9b\xfd\x9d\x0a\xfb\x57\x3d\xc6\xaf\xe1\xff\xaf\xb3\xac\xf9\xdb\xbf\xec\x31\xfe\x95\xa7\x2c\xbb\x92\xde\xa3\xb0\xff\x82\x87\xfd\x65\xd8\xbf\x1e\xf0\xb7\xff\xbc\x57\xfc\x61\x3f\x66\xb3\xbf\x5b\x61\xbf\xab\x8e\xec\xf3\x1a\x38\x01\x20\xcf\xdf\x53\xf3\xfa\xf5\x85\xa0\x5a\x7e\xfa\x91\xda\xe4\x7b\x3c\xec\x2f\x74\xd7\x26\x7f\xcd\xc3\xfe\xd2\x07\x6a\x93\xff\x0d\x0f\xfb\xab\x8f\xd6\x26\xff\xd7\x1e\xf6\x37\x1e\xab\x4d\x3e\xa1\xa9\xe5\x1b\x3f\x54\x9b\xfc\x23\x01\xb5\x7c\x7b\xa2\x36\xf9\x77\x7b\xc8\xc7\x3f\x5c\x9b\x7c\xc8\x63\xfc\xc9\xc7\xd5\xfd\xf9\xfe\xf9\x2b\x1e\xf6\xfb\x3d\xe4\x79\x3b\x8c\xef\xf0\xf8\x6f\x10\xf2\xf1\x06\xcb\xae\x99\x92\x32\xff\xe5\x4d\xc5\xff\x05\x00\x00\xff\xff\x14\x63\xd0\x92\xb0\x58\x00\x00")

func tcptracerEbpfOBytes() ([]byte, error) {
	return bindataRead(
		_tcptracerEbpfO,
		"tcptracer-ebpf.o",
	)
}

func tcptracerEbpfO() (*asset, error) {
	bytes, err := tcptracerEbpfOBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tcptracer-ebpf.o", size: 22704, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"tcptracer-ebpf.o": tcptracerEbpfO,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"tcptracer-ebpf.o": &bintree{tcptracerEbpfO, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
