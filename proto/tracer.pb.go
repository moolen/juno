// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tracer.proto

package tracer

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IPVersion int32

const (
	IPVersion_IP_NOT_USED IPVersion = 0
	IPVersion_IPv4        IPVersion = 1
	IPVersion_IPv6        IPVersion = 2
)

var IPVersion_name = map[int32]string{
	0: "IP_NOT_USED",
	1: "IPv4",
	2: "IPv6",
}

var IPVersion_value = map[string]int32{
	"IP_NOT_USED": 0,
	"IPv4":        1,
	"IPv6":        2,
}

func (x IPVersion) String() string {
	return proto.EnumName(IPVersion_name, int32(x))
}

func (IPVersion) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6d422d7c66fbbd8f, []int{0}
}

type GetTracesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTracesRequest) Reset()         { *m = GetTracesRequest{} }
func (m *GetTracesRequest) String() string { return proto.CompactTextString(m) }
func (*GetTracesRequest) ProtoMessage()    {}
func (*GetTracesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d422d7c66fbbd8f, []int{0}
}

func (m *GetTracesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTracesRequest.Unmarshal(m, b)
}
func (m *GetTracesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTracesRequest.Marshal(b, m, deterministic)
}
func (m *GetTracesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTracesRequest.Merge(m, src)
}
func (m *GetTracesRequest) XXX_Size() int {
	return xxx_messageInfo_GetTracesRequest.Size(m)
}
func (m *GetTracesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTracesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTracesRequest proto.InternalMessageInfo

type GetTracesResponse struct {
	Trace                *Trace   `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTracesResponse) Reset()         { *m = GetTracesResponse{} }
func (m *GetTracesResponse) String() string { return proto.CompactTextString(m) }
func (*GetTracesResponse) ProtoMessage()    {}
func (*GetTracesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d422d7c66fbbd8f, []int{1}
}

func (m *GetTracesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTracesResponse.Unmarshal(m, b)
}
func (m *GetTracesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTracesResponse.Marshal(b, m, deterministic)
}
func (m *GetTracesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTracesResponse.Merge(m, src)
}
func (m *GetTracesResponse) XXX_Size() int {
	return xxx_messageInfo_GetTracesResponse.Size(m)
}
func (m *GetTracesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTracesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTracesResponse proto.InternalMessageInfo

func (m *GetTracesResponse) GetTrace() *Trace {
	if m != nil {
		return m.Trace
	}
	return nil
}

type Trace struct {
	Time                 *timestamp.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	IP                   *IP                  `protobuf:"bytes,5,opt,name=IP,proto3" json:"IP,omitempty"`
	L4                   *Layer4              `protobuf:"bytes,6,opt,name=l4,proto3" json:"l4,omitempty"`
	L7                   *Layer7              `protobuf:"bytes,15,opt,name=l7,proto3" json:"l7,omitempty"`
	Source               *Endpoint            `protobuf:"bytes,8,opt,name=source,proto3" json:"source,omitempty"`
	Destination          *Endpoint            `protobuf:"bytes,9,opt,name=destination,proto3" json:"destination,omitempty"`
	NodeName             string               `protobuf:"bytes,11,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Trace) Reset()         { *m = Trace{} }
func (m *Trace) String() string { return proto.CompactTextString(m) }
func (*Trace) ProtoMessage()    {}
func (*Trace) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d422d7c66fbbd8f, []int{2}
}

func (m *Trace) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trace.Unmarshal(m, b)
}
func (m *Trace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trace.Marshal(b, m, deterministic)
}
func (m *Trace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trace.Merge(m, src)
}
func (m *Trace) XXX_Size() int {
	return xxx_messageInfo_Trace.Size(m)
}
func (m *Trace) XXX_DiscardUnknown() {
	xxx_messageInfo_Trace.DiscardUnknown(m)
}

var xxx_messageInfo_Trace proto.InternalMessageInfo

func (m *Trace) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *Trace) GetIP() *IP {
	if m != nil {
		return m.IP
	}
	return nil
}

func (m *Trace) GetL4() *Layer4 {
	if m != nil {
		return m.L4
	}
	return nil
}

func (m *Trace) GetL7() *Layer7 {
	if m != nil {
		return m.L7
	}
	return nil
}

func (m *Trace) GetSource() *Endpoint {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *Trace) GetDestination() *Endpoint {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (m *Trace) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

type Layer4 struct {
	// Types that are valid to be assigned to Protocol:
	//	*Layer4_TCP
	//	*Layer4_UDP
	//	*Layer4_ICMPv4
	//	*Layer4_ICMPv6
	Protocol             isLayer4_Protocol `protobuf_oneof:"protocol"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Layer4) Reset()         { *m = Layer4{} }
func (m *Layer4) String() string { return proto.CompactTextString(m) }
func (*Layer4) ProtoMessage()    {}
func (*Layer4) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d422d7c66fbbd8f, []int{3}
}

func (m *Layer4) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Layer4.Unmarshal(m, b)
}
func (m *Layer4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Layer4.Marshal(b, m, deterministic)
}
func (m *Layer4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Layer4.Merge(m, src)
}
func (m *Layer4) XXX_Size() int {
	return xxx_messageInfo_Layer4.Size(m)
}
func (m *Layer4) XXX_DiscardUnknown() {
	xxx_messageInfo_Layer4.DiscardUnknown(m)
}

var xxx_messageInfo_Layer4 proto.InternalMessageInfo

type isLayer4_Protocol interface {
	isLayer4_Protocol()
}

type Layer4_TCP struct {
	TCP *TCP `protobuf:"bytes,1,opt,name=TCP,proto3,oneof"`
}

type Layer4_UDP struct {
	UDP *UDP `protobuf:"bytes,2,opt,name=UDP,proto3,oneof"`
}

type Layer4_ICMPv4 struct {
	ICMPv4 *ICMPv4 `protobuf:"bytes,3,opt,name=ICMPv4,proto3,oneof"`
}

type Layer4_ICMPv6 struct {
	ICMPv6 *ICMPv6 `protobuf:"bytes,4,opt,name=ICMPv6,proto3,oneof"`
}

func (*Layer4_TCP) isLayer4_Protocol() {}

func (*Layer4_UDP) isLayer4_Protocol() {}

func (*Layer4_ICMPv4) isLayer4_Protocol() {}

func (*Layer4_ICMPv6) isLayer4_Protocol() {}

func (m *Layer4) GetProtocol() isLayer4_Protocol {
	if m != nil {
		return m.Protocol
	}
	return nil
}

func (m *Layer4) GetTCP() *TCP {
	if x, ok := m.GetProtocol().(*Layer4_TCP); ok {
		return x.TCP
	}
	return nil
}

func (m *Layer4) GetUDP() *UDP {
	if x, ok := m.GetProtocol().(*Layer4_UDP); ok {
		return x.UDP
	}
	return nil
}

func (m *Layer4) GetICMPv4() *ICMPv4 {
	if x, ok := m.GetProtocol().(*Layer4_ICMPv4); ok {
		return x.ICMPv4
	}
	return nil
}

func (m *Layer4) GetICMPv6() *ICMPv6 {
	if x, ok := m.GetProtocol().(*Layer4_ICMPv6); ok {
		return x.ICMPv6
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Layer4) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Layer4_TCP)(nil),
		(*Layer4_UDP)(nil),
		(*Layer4_ICMPv4)(nil),
		(*Layer4_ICMPv6)(nil),
	}
}

type Layer7 struct {
	// Types that are valid to be assigned to Record:
	//	*Layer7_Dns
	//	*Layer7_Http
	Record               isLayer7_Record `protobuf_oneof:"record"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Layer7) Reset()         { *m = Layer7{} }
func (m *Layer7) String() string { return proto.CompactTextString(m) }
func (*Layer7) ProtoMessage()    {}
func (*Layer7) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d422d7c66fbbd8f, []int{4}
}

func (m *Layer7) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Layer7.Unmarshal(m, b)
}
func (m *Layer7) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Layer7.Marshal(b, m, deterministic)
}
func (m *Layer7) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Layer7.Merge(m, src)
}
func (m *Layer7) XXX_Size() int {
	return xxx_messageInfo_Layer7.Size(m)
}
func (m *Layer7) XXX_DiscardUnknown() {
	xxx_messageInfo_Layer7.DiscardUnknown(m)
}

var xxx_messageInfo_Layer7 proto.InternalMessageInfo

type isLayer7_Record interface {
	isLayer7_Record()
}

type Layer7_Dns struct {
	Dns *DNS `protobuf:"bytes,100,opt,name=dns,proto3,oneof"`
}

type Layer7_Http struct {
	Http *HTTP `protobuf:"bytes,101,opt,name=http,proto3,oneof"`
}

func (*Layer7_Dns) isLayer7_Record() {}

func (*Layer7_Http) isLayer7_Record() {}

func (m *Layer7) GetRecord() isLayer7_Record {
	if m != nil {
		return m.Record
	}
	return nil
}

func (m *Layer7) GetDns() *DNS {
	if x, ok := m.GetRecord().(*Layer7_Dns); ok {
		return x.Dns
	}
	return nil
}

func (m *Layer7) GetHttp() *HTTP {
	if x, ok := m.GetRecord().(*Layer7_Http); ok {
		return x.Http
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Layer7) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Layer7_Dns)(nil),
		(*Layer7_Http)(nil),
	}
}

type Endpoint struct {
	Namespace            string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Labels               map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Endpoint) Reset()         { *m = Endpoint{} }
func (m *Endpoint) String() string { return proto.CompactTextString(m) }
func (*Endpoint) ProtoMessage()    {}
func (*Endpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d422d7c66fbbd8f, []int{5}
}

func (m *Endpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Endpoint.Unmarshal(m, b)
}
func (m *Endpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Endpoint.Marshal(b, m, deterministic)
}
func (m *Endpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Endpoint.Merge(m, src)
}
func (m *Endpoint) XXX_Size() int {
	return xxx_messageInfo_Endpoint.Size(m)
}
func (m *Endpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_Endpoint.DiscardUnknown(m)
}

var xxx_messageInfo_Endpoint proto.InternalMessageInfo

func (m *Endpoint) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *Endpoint) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Endpoint) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type IP struct {
	Source               string    `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Destination          string    `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
	IpVersion            IPVersion `protobuf:"varint,3,opt,name=ipVersion,proto3,enum=tracer.IPVersion" json:"ipVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *IP) Reset()         { *m = IP{} }
func (m *IP) String() string { return proto.CompactTextString(m) }
func (*IP) ProtoMessage()    {}
func (*IP) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d422d7c66fbbd8f, []int{6}
}

func (m *IP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IP.Unmarshal(m, b)
}
func (m *IP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IP.Marshal(b, m, deterministic)
}
func (m *IP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IP.Merge(m, src)
}
func (m *IP) XXX_Size() int {
	return xxx_messageInfo_IP.Size(m)
}
func (m *IP) XXX_DiscardUnknown() {
	xxx_messageInfo_IP.DiscardUnknown(m)
}

var xxx_messageInfo_IP proto.InternalMessageInfo

func (m *IP) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *IP) GetDestination() string {
	if m != nil {
		return m.Destination
	}
	return ""
}

func (m *IP) GetIpVersion() IPVersion {
	if m != nil {
		return m.IpVersion
	}
	return IPVersion_IP_NOT_USED
}

type TCP struct {
	SourcePort           uint32    `protobuf:"varint,1,opt,name=source_port,json=sourcePort,proto3" json:"source_port,omitempty"`
	DestinationPort      uint32    `protobuf:"varint,2,opt,name=destination_port,json=destinationPort,proto3" json:"destination_port,omitempty"`
	Flags                *TCPFlags `protobuf:"bytes,3,opt,name=flags,proto3" json:"flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *TCP) Reset()         { *m = TCP{} }
func (m *TCP) String() string { return proto.CompactTextString(m) }
func (*TCP) ProtoMessage()    {}
func (*TCP) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d422d7c66fbbd8f, []int{7}
}

func (m *TCP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TCP.Unmarshal(m, b)
}
func (m *TCP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TCP.Marshal(b, m, deterministic)
}
func (m *TCP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TCP.Merge(m, src)
}
func (m *TCP) XXX_Size() int {
	return xxx_messageInfo_TCP.Size(m)
}
func (m *TCP) XXX_DiscardUnknown() {
	xxx_messageInfo_TCP.DiscardUnknown(m)
}

var xxx_messageInfo_TCP proto.InternalMessageInfo

func (m *TCP) GetSourcePort() uint32 {
	if m != nil {
		return m.SourcePort
	}
	return 0
}

func (m *TCP) GetDestinationPort() uint32 {
	if m != nil {
		return m.DestinationPort
	}
	return 0
}

func (m *TCP) GetFlags() *TCPFlags {
	if m != nil {
		return m.Flags
	}
	return nil
}

type TCPFlags struct {
	FIN                  bool     `protobuf:"varint,1,opt,name=FIN,proto3" json:"FIN,omitempty"`
	SYN                  bool     `protobuf:"varint,2,opt,name=SYN,proto3" json:"SYN,omitempty"`
	RST                  bool     `protobuf:"varint,3,opt,name=RST,proto3" json:"RST,omitempty"`
	PSH                  bool     `protobuf:"varint,4,opt,name=PSH,proto3" json:"PSH,omitempty"`
	ACK                  bool     `protobuf:"varint,5,opt,name=ACK,proto3" json:"ACK,omitempty"`
	URG                  bool     `protobuf:"varint,6,opt,name=URG,proto3" json:"URG,omitempty"`
	ECE                  bool     `protobuf:"varint,7,opt,name=ECE,proto3" json:"ECE,omitempty"`
	CWR                  bool     `protobuf:"varint,8,opt,name=CWR,proto3" json:"CWR,omitempty"`
	NS                   bool     `protobuf:"varint,9,opt,name=NS,proto3" json:"NS,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TCPFlags) Reset()         { *m = TCPFlags{} }
func (m *TCPFlags) String() string { return proto.CompactTextString(m) }
func (*TCPFlags) ProtoMessage()    {}
func (*TCPFlags) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d422d7c66fbbd8f, []int{8}
}

func (m *TCPFlags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TCPFlags.Unmarshal(m, b)
}
func (m *TCPFlags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TCPFlags.Marshal(b, m, deterministic)
}
func (m *TCPFlags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TCPFlags.Merge(m, src)
}
func (m *TCPFlags) XXX_Size() int {
	return xxx_messageInfo_TCPFlags.Size(m)
}
func (m *TCPFlags) XXX_DiscardUnknown() {
	xxx_messageInfo_TCPFlags.DiscardUnknown(m)
}

var xxx_messageInfo_TCPFlags proto.InternalMessageInfo

func (m *TCPFlags) GetFIN() bool {
	if m != nil {
		return m.FIN
	}
	return false
}

func (m *TCPFlags) GetSYN() bool {
	if m != nil {
		return m.SYN
	}
	return false
}

func (m *TCPFlags) GetRST() bool {
	if m != nil {
		return m.RST
	}
	return false
}

func (m *TCPFlags) GetPSH() bool {
	if m != nil {
		return m.PSH
	}
	return false
}

func (m *TCPFlags) GetACK() bool {
	if m != nil {
		return m.ACK
	}
	return false
}

func (m *TCPFlags) GetURG() bool {
	if m != nil {
		return m.URG
	}
	return false
}

func (m *TCPFlags) GetECE() bool {
	if m != nil {
		return m.ECE
	}
	return false
}

func (m *TCPFlags) GetCWR() bool {
	if m != nil {
		return m.CWR
	}
	return false
}

func (m *TCPFlags) GetNS() bool {
	if m != nil {
		return m.NS
	}
	return false
}

type UDP struct {
	SourcePort           uint32   `protobuf:"varint,1,opt,name=source_port,json=sourcePort,proto3" json:"source_port,omitempty"`
	DestinationPort      uint32   `protobuf:"varint,2,opt,name=destination_port,json=destinationPort,proto3" json:"destination_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UDP) Reset()         { *m = UDP{} }
func (m *UDP) String() string { return proto.CompactTextString(m) }
func (*UDP) ProtoMessage()    {}
func (*UDP) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d422d7c66fbbd8f, []int{9}
}

func (m *UDP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UDP.Unmarshal(m, b)
}
func (m *UDP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UDP.Marshal(b, m, deterministic)
}
func (m *UDP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UDP.Merge(m, src)
}
func (m *UDP) XXX_Size() int {
	return xxx_messageInfo_UDP.Size(m)
}
func (m *UDP) XXX_DiscardUnknown() {
	xxx_messageInfo_UDP.DiscardUnknown(m)
}

var xxx_messageInfo_UDP proto.InternalMessageInfo

func (m *UDP) GetSourcePort() uint32 {
	if m != nil {
		return m.SourcePort
	}
	return 0
}

func (m *UDP) GetDestinationPort() uint32 {
	if m != nil {
		return m.DestinationPort
	}
	return 0
}

type ICMPv4 struct {
	Type                 uint32   `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Code                 uint32   `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ICMPv4) Reset()         { *m = ICMPv4{} }
func (m *ICMPv4) String() string { return proto.CompactTextString(m) }
func (*ICMPv4) ProtoMessage()    {}
func (*ICMPv4) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d422d7c66fbbd8f, []int{10}
}

func (m *ICMPv4) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ICMPv4.Unmarshal(m, b)
}
func (m *ICMPv4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ICMPv4.Marshal(b, m, deterministic)
}
func (m *ICMPv4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ICMPv4.Merge(m, src)
}
func (m *ICMPv4) XXX_Size() int {
	return xxx_messageInfo_ICMPv4.Size(m)
}
func (m *ICMPv4) XXX_DiscardUnknown() {
	xxx_messageInfo_ICMPv4.DiscardUnknown(m)
}

var xxx_messageInfo_ICMPv4 proto.InternalMessageInfo

func (m *ICMPv4) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ICMPv4) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

type ICMPv6 struct {
	Type                 uint32   `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Code                 uint32   `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ICMPv6) Reset()         { *m = ICMPv6{} }
func (m *ICMPv6) String() string { return proto.CompactTextString(m) }
func (*ICMPv6) ProtoMessage()    {}
func (*ICMPv6) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d422d7c66fbbd8f, []int{11}
}

func (m *ICMPv6) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ICMPv6.Unmarshal(m, b)
}
func (m *ICMPv6) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ICMPv6.Marshal(b, m, deterministic)
}
func (m *ICMPv6) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ICMPv6.Merge(m, src)
}
func (m *ICMPv6) XXX_Size() int {
	return xxx_messageInfo_ICMPv6.Size(m)
}
func (m *ICMPv6) XXX_DiscardUnknown() {
	xxx_messageInfo_ICMPv6.DiscardUnknown(m)
}

var xxx_messageInfo_ICMPv6 proto.InternalMessageInfo

func (m *ICMPv6) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ICMPv6) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

type DNS struct {
	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// Return code of the DNS request defined in:
	//   https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-6
	Rcode uint32 `protobuf:"varint,6,opt,name=rcode,proto3" json:"rcode,omitempty"`
	// String representation of qtypes defined in:
	//   https://tools.ietf.org/html/rfc1035#section-3.2.3
	Qtypes []string `protobuf:"bytes,7,rep,name=qtypes,proto3" json:"qtypes,omitempty"`
	// String representation of rrtypes defined in:
	// https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4
	Rrtypes              []string `protobuf:"bytes,8,rep,name=rrtypes,proto3" json:"rrtypes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DNS) Reset()         { *m = DNS{} }
func (m *DNS) String() string { return proto.CompactTextString(m) }
func (*DNS) ProtoMessage()    {}
func (*DNS) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d422d7c66fbbd8f, []int{12}
}

func (m *DNS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DNS.Unmarshal(m, b)
}
func (m *DNS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DNS.Marshal(b, m, deterministic)
}
func (m *DNS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DNS.Merge(m, src)
}
func (m *DNS) XXX_Size() int {
	return xxx_messageInfo_DNS.Size(m)
}
func (m *DNS) XXX_DiscardUnknown() {
	xxx_messageInfo_DNS.DiscardUnknown(m)
}

var xxx_messageInfo_DNS proto.InternalMessageInfo

func (m *DNS) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *DNS) GetRcode() uint32 {
	if m != nil {
		return m.Rcode
	}
	return 0
}

func (m *DNS) GetQtypes() []string {
	if m != nil {
		return m.Qtypes
	}
	return nil
}

func (m *DNS) GetRrtypes() []string {
	if m != nil {
		return m.Rrtypes
	}
	return nil
}

type HTTPHeader struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HTTPHeader) Reset()         { *m = HTTPHeader{} }
func (m *HTTPHeader) String() string { return proto.CompactTextString(m) }
func (*HTTPHeader) ProtoMessage()    {}
func (*HTTPHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d422d7c66fbbd8f, []int{13}
}

func (m *HTTPHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HTTPHeader.Unmarshal(m, b)
}
func (m *HTTPHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HTTPHeader.Marshal(b, m, deterministic)
}
func (m *HTTPHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HTTPHeader.Merge(m, src)
}
func (m *HTTPHeader) XXX_Size() int {
	return xxx_messageInfo_HTTPHeader.Size(m)
}
func (m *HTTPHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_HTTPHeader.DiscardUnknown(m)
}

var xxx_messageInfo_HTTPHeader proto.InternalMessageInfo

func (m *HTTPHeader) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *HTTPHeader) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type HTTP struct {
	Code                 uint32        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Method               string        `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Url                  string        `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Protocol             string        `protobuf:"bytes,4,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Headers              []*HTTPHeader `protobuf:"bytes,5,rep,name=headers,proto3" json:"headers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *HTTP) Reset()         { *m = HTTP{} }
func (m *HTTP) String() string { return proto.CompactTextString(m) }
func (*HTTP) ProtoMessage()    {}
func (*HTTP) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d422d7c66fbbd8f, []int{14}
}

func (m *HTTP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HTTP.Unmarshal(m, b)
}
func (m *HTTP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HTTP.Marshal(b, m, deterministic)
}
func (m *HTTP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HTTP.Merge(m, src)
}
func (m *HTTP) XXX_Size() int {
	return xxx_messageInfo_HTTP.Size(m)
}
func (m *HTTP) XXX_DiscardUnknown() {
	xxx_messageInfo_HTTP.DiscardUnknown(m)
}

var xxx_messageInfo_HTTP proto.InternalMessageInfo

func (m *HTTP) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *HTTP) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *HTTP) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *HTTP) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *HTTP) GetHeaders() []*HTTPHeader {
	if m != nil {
		return m.Headers
	}
	return nil
}

type ServerStatusRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerStatusRequest) Reset()         { *m = ServerStatusRequest{} }
func (m *ServerStatusRequest) String() string { return proto.CompactTextString(m) }
func (*ServerStatusRequest) ProtoMessage()    {}
func (*ServerStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d422d7c66fbbd8f, []int{15}
}

func (m *ServerStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerStatusRequest.Unmarshal(m, b)
}
func (m *ServerStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerStatusRequest.Marshal(b, m, deterministic)
}
func (m *ServerStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerStatusRequest.Merge(m, src)
}
func (m *ServerStatusRequest) XXX_Size() int {
	return xxx_messageInfo_ServerStatusRequest.Size(m)
}
func (m *ServerStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ServerStatusRequest proto.InternalMessageInfo

type ServerStatusResponse struct {
	NumFlows             uint64   `protobuf:"varint,1,opt,name=num_flows,json=numFlows,proto3" json:"num_flows,omitempty"`
	MaxFlows             uint64   `protobuf:"varint,2,opt,name=max_flows,json=maxFlows,proto3" json:"max_flows,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerStatusResponse) Reset()         { *m = ServerStatusResponse{} }
func (m *ServerStatusResponse) String() string { return proto.CompactTextString(m) }
func (*ServerStatusResponse) ProtoMessage()    {}
func (*ServerStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d422d7c66fbbd8f, []int{16}
}

func (m *ServerStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerStatusResponse.Unmarshal(m, b)
}
func (m *ServerStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerStatusResponse.Marshal(b, m, deterministic)
}
func (m *ServerStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerStatusResponse.Merge(m, src)
}
func (m *ServerStatusResponse) XXX_Size() int {
	return xxx_messageInfo_ServerStatusResponse.Size(m)
}
func (m *ServerStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ServerStatusResponse proto.InternalMessageInfo

func (m *ServerStatusResponse) GetNumFlows() uint64 {
	if m != nil {
		return m.NumFlows
	}
	return 0
}

func (m *ServerStatusResponse) GetMaxFlows() uint64 {
	if m != nil {
		return m.MaxFlows
	}
	return 0
}

func init() {
	proto.RegisterEnum("tracer.IPVersion", IPVersion_name, IPVersion_value)
	proto.RegisterType((*GetTracesRequest)(nil), "tracer.GetTracesRequest")
	proto.RegisterType((*GetTracesResponse)(nil), "tracer.GetTracesResponse")
	proto.RegisterType((*Trace)(nil), "tracer.Trace")
	proto.RegisterType((*Layer4)(nil), "tracer.Layer4")
	proto.RegisterType((*Layer7)(nil), "tracer.Layer7")
	proto.RegisterType((*Endpoint)(nil), "tracer.Endpoint")
	proto.RegisterMapType((map[string]string)(nil), "tracer.Endpoint.LabelsEntry")
	proto.RegisterType((*IP)(nil), "tracer.IP")
	proto.RegisterType((*TCP)(nil), "tracer.TCP")
	proto.RegisterType((*TCPFlags)(nil), "tracer.TCPFlags")
	proto.RegisterType((*UDP)(nil), "tracer.UDP")
	proto.RegisterType((*ICMPv4)(nil), "tracer.ICMPv4")
	proto.RegisterType((*ICMPv6)(nil), "tracer.ICMPv6")
	proto.RegisterType((*DNS)(nil), "tracer.DNS")
	proto.RegisterType((*HTTPHeader)(nil), "tracer.HTTPHeader")
	proto.RegisterType((*HTTP)(nil), "tracer.HTTP")
	proto.RegisterType((*ServerStatusRequest)(nil), "tracer.ServerStatusRequest")
	proto.RegisterType((*ServerStatusResponse)(nil), "tracer.ServerStatusResponse")
}

func init() {
	proto.RegisterFile("tracer.proto", fileDescriptor_6d422d7c66fbbd8f)
}

var fileDescriptor_6d422d7c66fbbd8f = []byte{
	// 939 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xdd, 0x6e, 0xdb, 0x46,
	0x13, 0x35, 0xa9, 0x1f, 0x93, 0x23, 0xc7, 0x56, 0xf6, 0xcb, 0x57, 0xb0, 0x8a, 0xd1, 0x08, 0x2c,
	0x50, 0xb8, 0x45, 0x21, 0x1b, 0xaa, 0x20, 0xa7, 0xbd, 0x6b, 0x24, 0x39, 0x16, 0x92, 0xaa, 0xec,
	0x52, 0x6a, 0xd0, 0x2b, 0x81, 0x16, 0xd7, 0xb6, 0x50, 0x8a, 0x94, 0x97, 0x94, 0x1b, 0xbd, 0x44,
	0x5e, 0xa0, 0x6f, 0x50, 0xa0, 0xef, 0x58, 0xcc, 0x2c, 0x97, 0x92, 0x02, 0x15, 0xc8, 0x45, 0xef,
	0x66, 0xcf, 0x39, 0xb3, 0x33, 0x1c, 0x9e, 0x21, 0xe1, 0x28, 0x93, 0xc1, 0x4c, 0xc8, 0xd6, 0x52,
	0x26, 0x59, 0xc2, 0xaa, 0xea, 0xd4, 0x78, 0x71, 0x97, 0x24, 0x77, 0x91, 0x38, 0x27, 0xf4, 0x66,
	0x75, 0x7b, 0x9e, 0xcd, 0x17, 0x22, 0xcd, 0x82, 0xc5, 0x52, 0x09, 0x5d, 0x06, 0xf5, 0xd7, 0x22,
	0x1b, 0xa3, 0x3a, 0xe5, 0xe2, 0x61, 0x25, 0xd2, 0xcc, 0x7d, 0x09, 0x4f, 0xb7, 0xb0, 0x74, 0x99,
	0xc4, 0xa9, 0x60, 0x5f, 0x42, 0x85, 0xee, 0x74, 0x8c, 0xa6, 0x71, 0x56, 0x6b, 0x3f, 0x69, 0xe5,
	0xf5, 0x48, 0xc6, 0x15, 0xe7, 0x7e, 0x30, 0xa1, 0x42, 0x00, 0x6b, 0x41, 0x19, 0x4b, 0xe5, 0xea,
	0x46, 0x4b, 0xf5, 0xd1, 0xd2, 0x7d, 0xb4, 0xc6, 0xba, 0x0f, 0x4e, 0x3a, 0xd6, 0x00, 0x73, 0xe8,
	0x39, 0x15, 0x52, 0x83, 0xbe, 0x7b, 0xe8, 0x71, 0x73, 0xe8, 0xb1, 0x2f, 0xc0, 0x8c, 0x3a, 0x4e,
	0x95, 0xb8, 0x63, 0xcd, 0xbd, 0x0d, 0xd6, 0x42, 0x76, 0xb8, 0x19, 0x75, 0x88, 0xbf, 0x74, 0x4e,
	0xf6, 0xf0, 0x97, 0xdc, 0x8c, 0x2e, 0xd9, 0x19, 0x54, 0xd3, 0x64, 0x25, 0x67, 0xc2, 0xb1, 0x48,
	0x53, 0xd7, 0x9a, 0x41, 0x1c, 0x2e, 0x93, 0x79, 0x9c, 0xf1, 0x9c, 0x67, 0x6d, 0xa8, 0x85, 0x22,
	0xcd, 0xe6, 0x71, 0x90, 0xcd, 0x93, 0xd8, 0xb1, 0xff, 0x45, 0xbe, 0x2d, 0x62, 0xcf, 0xc1, 0x8e,
	0x93, 0x50, 0x4c, 0xe3, 0x60, 0x21, 0x9c, 0x5a, 0xd3, 0x38, 0xb3, 0xb9, 0x85, 0xc0, 0x28, 0x58,
	0x08, 0xf7, 0x2f, 0x03, 0xaa, 0xaa, 0x53, 0xf6, 0x02, 0x4a, 0xe3, 0x9e, 0x97, 0x0f, 0xa4, 0x56,
	0x8c, 0xaf, 0xe7, 0x5d, 0x1f, 0x70, 0x64, 0x50, 0x30, 0xe9, 0x7b, 0x8e, 0xb9, 0x2b, 0x98, 0xf4,
	0x49, 0x30, 0xe9, 0x7b, 0xf8, 0x1c, 0xc3, 0xde, 0x4f, 0xde, 0x63, 0xc7, 0x29, 0xed, 0x3e, 0xab,
	0x42, 0xaf, 0x0f, 0x78, 0xce, 0x17, 0xca, 0xae, 0x53, 0xde, 0xa3, 0xec, 0x16, 0xca, 0xee, 0x2b,
	0x00, 0x8b, 0xde, 0xc9, 0x2c, 0x89, 0xdc, 0x77, 0x79, 0xaf, 0x97, 0xd8, 0x4a, 0x18, 0xa7, 0x4e,
	0xb8, 0xdb, 0x4a, 0x7f, 0xe4, 0x63, 0x2b, 0x61, 0x9c, 0x32, 0x17, 0xca, 0xf7, 0x59, 0xb6, 0x74,
	0x04, 0x29, 0x8e, 0xb4, 0xe2, 0x7a, 0x3c, 0xc6, 0x6e, 0x89, 0x7b, 0x65, 0x41, 0x55, 0x8a, 0x59,
	0x22, 0x43, 0xf7, 0x6f, 0x03, 0x2c, 0x3d, 0x3c, 0x76, 0x0a, 0x36, 0x8e, 0x2a, 0x5d, 0x6a, 0x33,
	0xd9, 0x7c, 0x03, 0x30, 0x06, 0x65, 0x1a, 0xa4, 0x49, 0x04, 0xc5, 0xac, 0x03, 0xd5, 0x28, 0xb8,
	0x11, 0x51, 0xea, 0x94, 0x9a, 0xa5, 0xb3, 0x5a, 0xfb, 0xf4, 0xe3, 0x17, 0xd2, 0x7a, 0x4b, 0xf4,
	0x20, 0xce, 0xe4, 0x9a, 0xe7, 0xda, 0xc6, 0xf7, 0x50, 0xdb, 0x82, 0x59, 0x1d, 0x4a, 0xbf, 0x8b,
	0x75, 0x5e, 0x10, 0x43, 0xf6, 0x0c, 0x2a, 0x8f, 0x41, 0xb4, 0xd2, 0xb5, 0xd4, 0xe1, 0x07, 0xf3,
	0xa5, 0xe1, 0x26, 0x68, 0x46, 0xf6, 0x59, 0x61, 0x1b, 0x95, 0xa4, 0x4d, 0xd2, 0xdc, 0x35, 0x89,
	0xca, 0xde, 0xb1, 0xc4, 0x39, 0xd8, 0xf3, 0xe5, 0xaf, 0x42, 0xa6, 0xc8, 0xe3, 0xbb, 0x3a, 0x6e,
	0x3f, 0xdd, 0x78, 0x3a, 0x27, 0xf8, 0x46, 0xe3, 0xae, 0x21, 0x77, 0x40, 0x4d, 0xd5, 0x98, 0x2e,
	0x13, 0x99, 0x51, 0xd9, 0x27, 0x1c, 0x14, 0xe4, 0x25, 0x32, 0x63, 0x5f, 0x43, 0x7d, 0xab, 0x8e,
	0x52, 0x99, 0xa4, 0x3a, 0xd9, 0xc2, 0x49, 0xfa, 0x15, 0x54, 0x6e, 0xa3, 0xe0, 0x2e, 0xcd, 0xbd,
	0x52, 0xdf, 0x32, 0xdc, 0x15, 0xe2, 0x5c, 0xd1, 0xe8, 0x50, 0x4b, 0x63, 0x38, 0xa4, 0xab, 0xe1,
	0x88, 0x0a, 0x5b, 0x1c, 0x43, 0x44, 0xfc, 0xdf, 0x46, 0x54, 0xc4, 0xe2, 0x18, 0x22, 0xc2, 0xfd,
	0x31, 0x5d, 0x6b, 0x71, 0x0c, 0x11, 0xf1, 0xfc, 0x6b, 0xb2, 0x9a, 0xc5, 0x31, 0x44, 0xe4, 0xc7,
	0xde, 0x1b, 0x5a, 0x67, 0x8b, 0x63, 0x88, 0xc8, 0x84, 0xbf, 0xa6, 0x25, 0xb6, 0x38, 0x86, 0x88,
	0x0c, 0x7a, 0x03, 0xe7, 0x50, 0x21, 0x83, 0xde, 0x00, 0x91, 0xde, 0x3b, 0x4e, 0x4b, 0x6a, 0x71,
	0x0c, 0xd9, 0x31, 0x98, 0x23, 0x9f, 0xd6, 0xd0, 0xe2, 0xe6, 0xc8, 0x77, 0x7f, 0xa1, 0x15, 0xf9,
	0x2f, 0xe7, 0xe4, 0x5e, 0xe8, 0xa5, 0x42, 0xeb, 0x65, 0xeb, 0xa5, 0xc8, 0xaf, 0xa3, 0x18, 0xb1,
	0x59, 0x12, 0x8a, 0x3c, 0x99, 0xe2, 0x22, 0xa3, 0xfb, 0xc9, 0x19, 0x33, 0x28, 0xf5, 0x47, 0x3e,
	0x1a, 0xee, 0x61, 0x25, 0xa4, 0x36, 0xa1, 0x3a, 0x20, 0x2a, 0x29, 0xa3, 0x4a, 0x19, 0xea, 0x80,
	0xe6, 0x7b, 0xc0, 0xfb, 0x52, 0xe7, 0xb0, 0x59, 0x42, 0xf3, 0xa9, 0x13, 0x73, 0xe0, 0x50, 0x4a,
	0x45, 0x58, 0x44, 0xe8, 0xa3, 0xdb, 0x01, 0xa0, 0xf5, 0x13, 0x41, 0x28, 0xe4, 0xa7, 0xda, 0xdd,
	0xfd, 0x60, 0x40, 0x19, 0xd3, 0x8a, 0xbe, 0x8d, 0x4d, 0xdf, 0xd8, 0xc4, 0x42, 0x64, 0xf7, 0x49,
	0x98, 0xe7, 0xe4, 0x27, 0xbc, 0x7c, 0x25, 0x23, 0xb2, 0x80, 0xcd, 0x31, 0x64, 0x8d, 0xcd, 0x67,
	0x84, 0x7c, 0x60, 0xf3, 0xe2, 0xcc, 0xbe, 0x85, 0xc3, 0x7b, 0x6a, 0x2a, 0x75, 0x2a, 0xb4, 0xbf,
	0x6c, 0xe7, 0x73, 0x41, 0x14, 0xd7, 0x12, 0xf7, 0xff, 0xf0, 0x3f, 0x5f, 0xc8, 0x47, 0x21, 0xfd,
	0x2c, 0xc8, 0x56, 0xc5, 0x3f, 0xc9, 0x83, 0x67, 0xbb, 0x70, 0xfe, 0x5b, 0xc2, 0xaf, 0xef, 0x6a,
	0x31, 0xbd, 0x8d, 0x92, 0x3f, 0x52, 0xea, 0xbd, 0xcc, 0xad, 0x78, 0xb5, 0xb8, 0xc2, 0x33, 0x92,
	0x8b, 0xe0, 0x7d, 0x4e, 0x9a, 0x8a, 0x5c, 0x04, 0xef, 0x89, 0xfc, 0xe6, 0x02, 0xec, 0x62, 0x17,
	0xd9, 0x09, 0xd4, 0x86, 0xde, 0x74, 0xf4, 0xf3, 0x78, 0x3a, 0xf1, 0x07, 0xfd, 0xfa, 0x01, 0xb3,
	0xa0, 0x3c, 0xf4, 0x1e, 0x3b, 0x75, 0x23, 0x8f, 0xba, 0x75, 0xb3, 0xfd, 0xa7, 0x01, 0x55, 0xfa,
	0xbb, 0x49, 0xd6, 0x07, 0xbb, 0xf8, 0x45, 0x32, 0x47, 0x3f, 0xcf, 0xc7, 0x7f, 0xd2, 0xc6, 0xe7,
	0x7b, 0x18, 0xd5, 0xb8, 0x7b, 0x70, 0x61, 0xb0, 0x37, 0x70, 0xb4, 0xfd, 0x50, 0xec, 0xb9, 0x96,
	0xef, 0x99, 0x40, 0xe3, 0x74, 0x3f, 0xa9, 0xaf, 0xbb, 0xa9, 0xd2, 0xc0, 0xbf, 0xfb, 0x27, 0x00,
	0x00, 0xff, 0xff, 0x5a, 0x62, 0x42, 0xb3, 0x09, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TracerClient is the client API for Tracer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TracerClient interface {
	GetTraces(ctx context.Context, in *GetTracesRequest, opts ...grpc.CallOption) (Tracer_GetTracesClient, error)
	ServerStatus(ctx context.Context, in *ServerStatusRequest, opts ...grpc.CallOption) (*ServerStatusResponse, error)
}

type tracerClient struct {
	cc grpc.ClientConnInterface
}

func NewTracerClient(cc grpc.ClientConnInterface) TracerClient {
	return &tracerClient{cc}
}

func (c *tracerClient) GetTraces(ctx context.Context, in *GetTracesRequest, opts ...grpc.CallOption) (Tracer_GetTracesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Tracer_serviceDesc.Streams[0], "/tracer.Tracer/GetTraces", opts...)
	if err != nil {
		return nil, err
	}
	x := &tracerGetTracesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Tracer_GetTracesClient interface {
	Recv() (*GetTracesResponse, error)
	grpc.ClientStream
}

type tracerGetTracesClient struct {
	grpc.ClientStream
}

func (x *tracerGetTracesClient) Recv() (*GetTracesResponse, error) {
	m := new(GetTracesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *tracerClient) ServerStatus(ctx context.Context, in *ServerStatusRequest, opts ...grpc.CallOption) (*ServerStatusResponse, error) {
	out := new(ServerStatusResponse)
	err := c.cc.Invoke(ctx, "/tracer.Tracer/ServerStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TracerServer is the server API for Tracer service.
type TracerServer interface {
	GetTraces(*GetTracesRequest, Tracer_GetTracesServer) error
	ServerStatus(context.Context, *ServerStatusRequest) (*ServerStatusResponse, error)
}

// UnimplementedTracerServer can be embedded to have forward compatible implementations.
type UnimplementedTracerServer struct {
}

func (*UnimplementedTracerServer) GetTraces(req *GetTracesRequest, srv Tracer_GetTracesServer) error {
	return status.Errorf(codes.Unimplemented, "method GetTraces not implemented")
}
func (*UnimplementedTracerServer) ServerStatus(ctx context.Context, req *ServerStatusRequest) (*ServerStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServerStatus not implemented")
}

func RegisterTracerServer(s *grpc.Server, srv TracerServer) {
	s.RegisterService(&_Tracer_serviceDesc, srv)
}

func _Tracer_GetTraces_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetTracesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TracerServer).GetTraces(m, &tracerGetTracesServer{stream})
}

type Tracer_GetTracesServer interface {
	Send(*GetTracesResponse) error
	grpc.ServerStream
}

type tracerGetTracesServer struct {
	grpc.ServerStream
}

func (x *tracerGetTracesServer) Send(m *GetTracesResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Tracer_ServerStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServerStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TracerServer).ServerStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tracer.Tracer/ServerStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TracerServer).ServerStatus(ctx, req.(*ServerStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Tracer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tracer.Tracer",
	HandlerType: (*TracerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ServerStatus",
			Handler:    _Tracer_ServerStatus_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetTraces",
			Handler:       _Tracer_GetTraces_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "tracer.proto",
}
